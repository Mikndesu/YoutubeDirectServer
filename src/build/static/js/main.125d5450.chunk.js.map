{"version":3,"sources":["auth/firebase.js","component/database/database.js","component/youtube/youtube.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Database","user","obj","database","ref","push","once","res","console","log","YoutubeFrame","props","src","this","id","title","React","Component","Youtube","state","text","list","style","color","background","padding","fontWeight","borderRadius","get_youtube_raw_url","bind","url","host","apikey","fetch","then","response","json","data","element","videoIDs","setState","write","userID","value","type","name","onChange","e","target","onClick","map","App","logout","auth","onAuthStateChanged","provider","GoogleAuthProvider","signInWithRedirect","signOut","className","uid","login","ReactDOM","render","document","getElementById"],"mappings":"gQAaAA,IAASC,cAVM,CACbC,OAAQC,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmBJ,cACnBK,MAAO,2CACPC,cAAe,iBAKFT,QAAf,E,wBCZqBU,G,2FACnB,SAAMC,EAAMC,GACVZ,EAASa,WAAWC,IAAIH,GAAMI,KAAKH,K,kBAGrC,SAAKD,GACHX,EACGa,WACAC,IAAIH,GACJK,KAAK,SAAS,SAACC,GACdC,QAAQC,IAAIF,U,aCVdG,E,kDACJ,WAAYC,GAAQ,uCACZA,G,0CAER,WACE,OACE,6BACE,wBACEC,IAAK,iCAAmCC,KAAKF,MAAMG,GACnDC,MAAOF,KAAKF,MAAMG,MAHbD,KAAKF,MAAMG,Q,GANCE,IAAMC,WAgBZC,E,kDACnB,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IAIRQ,MAAQ,CACNC,KAAM,GACNC,KAAM,IAPW,EAUnBC,MAAQ,CACNC,MAAO,OACPC,WAAY,UACZC,QAAS,QACTC,WAAY,SACZC,aAAc,SAbd,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAFV,E,uDAkBnB,WAAuB,IAAD,OAGhBC,EAAMC,+EAAgBlB,KAAKF,MAAMqB,OAAS,MAAQnB,KAAKM,MAAMC,KACjEZ,QAAQC,IAAIqB,GACZ,IAAI3B,EAAW,IAAIH,EACnBiC,MAAMH,GACHI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,IAAD,gBACQA,EAAI,OADZ,IACd,2BAAqC,CAAC,IAA3BC,EAA0B,QACnC,GAA8B,oBAA1BA,EAAO,GAAP,KAA6C,CAC/C,IAAIC,EAAQ,YAAO,EAAKpB,MAAME,MAC9BkB,EAASlC,KAAKiC,EAAO,GAAP,SACd,EAAKE,SAAS,CACZnB,KAAMkB,IAERpC,EAASsC,MAAM,EAAK9B,MAAM+B,OAAQ,CAChCC,MAAOL,EAAO,GAAP,YATC,oC,oBAgBpB,WAAU,IAAD,OACP,OACE,gCACE,uBACEM,KAAK,OACLC,KAAK,QACLF,MAAO9B,KAAKM,MAAMC,KAClB0B,SAAU,SAACC,GAAD,OAAO,EAAKP,SAAS,CAAEpB,KAAM2B,EAAEC,OAAOL,WAElD,wBACEC,KAAK,SACL9B,GAAG,eACHQ,MAAOT,KAAKS,MACZ2B,QAASpC,KAAKe,sBAEhB,8BACE,6BACGf,KAAKM,MAAME,KAAK6B,KAAI,SAACZ,GACpB,OACE,cAAC,EAAD,CAAcxB,GAAIwB,kB,GA9DGtB,IAAMC,WCoC5BkC,E,kDAhDb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAIRQ,MAAQ,CACNlB,KAAM,MAJN,EAAKmD,OAAS,EAAKA,OAAOvB,KAAZ,gBAFG,E,qDASnB,WAAqB,IAAD,OAClBvC,EAAS+D,OAAOC,oBAAmB,SAACrD,GAClC,EAAKuC,SAAS,CAAEvC,c,mBAIpB,WACE,IAAMsD,EAAW,IAAIjE,EAAS+D,KAAKG,mBACnClE,EAAS+D,OAAOI,mBAAmBF,K,oBAGrC,WACEjE,EAAS+D,OAAOK,UAChB7C,KAAK2B,SAAS,CAACvC,KAAK,S,oBAGtB,WACE,OACE,qBAAK0D,UAAU,MAAf,SACG9C,KAAKM,MAAMlB,KACV,gCACE,8DACA,cAAC,EAAD,CACE+B,OAAQvC,0CACRiD,OAAQ7B,KAAKM,MAAMlB,KAAK2D,MAE1B,wBAAQX,QAASpC,KAAKuC,OAAtB,8BAGF,gCACE,qEACA,wBAAQH,QAASpC,KAAKgD,MAAtB,mC,GAzCM5C,aCDlB6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.125d5450.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: \"direct-6b4f7.firebaseapp.com\",\n  projectId: \"direct-6b4f7\",\n  storageBucket: \"direct-6b4f7.appspot.com\",\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: \"1:52894075571:web:c3c33f5a256b220ab9bec6\",\n  measurementId: \"G-EB5XJF731T\",\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from \"../../auth/firebase\";\nimport \"firebase/database\";\n\nexport default class Database {\n  write(user, obj) {\n    firebase.database().ref(user).push(obj);\n  }\n\n  read(user) {\n    firebase\n      .database()\n      .ref(user)\n      .once(\"value\", (res) => {\n        console.log(res);\n      });\n  }\n}\n","import React from \"react\";\nimport Database from \"../database/database\";\n\nclass YoutubeFrame extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <li key={this.props.id}>\n        <iframe\n          src={\"https://www.youtube.com/embed/\" + this.props.id}\n          title={this.props.id}\n        />\n      </li>\n    );\n  }\n}\n\nexport default class Youtube extends React.Component {\n  constructor(props) {\n    super(props);\n    this.get_youtube_raw_url = this.get_youtube_raw_url.bind(this);\n  }\n\n  state = {\n    text: \"\",\n    list: [],\n  };\n\n  style = {\n    color: \"blue\",\n    background: \"#aaccff\",\n    padding: \"0.5em\",\n    fontWeight: \"bolder\",\n    borderRadius: \"0.5em\",\n  };\n\n  get_youtube_raw_url() {\n    let host = \"https://www.googleapis.com/youtube/v3/search?\";\n    let params = \"part=snippet&regionCode=jp&key=\";\n    let url = host + params + this.props.apikey + \"&q=\" + this.state.text;\n    console.log(url);\n    let database = new Database();\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        for (const element of data[\"items\"]) {\n          if (element[\"id\"][\"kind\"] !== \"youtube#channel\") {\n            let videoIDs = [...this.state.list];\n            videoIDs.push(element[\"id\"][\"videoId\"]);\n            this.setState({\n              list: videoIDs,\n            });\n            database.write(this.props.userID, {\n              value: element[\"id\"][\"videoId\"],\n            });\n          }\n        }\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          name=\"atext\"\n          value={this.state.text}\n          onChange={(e) => this.setState({ text: e.target.value })}\n        />\n        <button\n          type=\"submit\"\n          id=\"submitButton\"\n          style={this.style}\n          onClick={this.get_youtube_raw_url}\n        ></button>\n        <div>\n          <ul>\n            {this.state.list.map((element) => {\n              return (\n                <YoutubeFrame id={element}/>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport firebase from \"./auth/firebase\";\nimport \"./App.css\";\nimport Youtube from \"./component/youtube/youtube\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.logout = this.logout.bind(this)\n  }\n\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ user });\n    });\n  }\n\n  login() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithRedirect(provider);\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    this.setState({user:null})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? (\n          <div>\n            <h2>You are currently logged in.</h2>\n            <Youtube\n              apikey={process.env.REACT_APP_FIREBASE_APIKEY}\n              userID={this.state.user.uid}\n            />\n            <button onClick={this.logout}>Google Logout</button>\n          </div>\n        ) : (\n          <div>\n            <h2>You aren't currently logged in now.</h2>\n            <button onClick={this.login}>Google Login</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}